ARM GAS  /tmp/cccy6xvc.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"freertos.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.StartTask01,"ax",%progbits
  16              		.align	1
  17              		.global	StartTask01
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	StartTask01:
  24              	.LFB70:
  25              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Src/freertos.c **** /**
   3:Src/freertos.c ****   ******************************************************************************
   4:Src/freertos.c ****   * File Name          : freertos.c
   5:Src/freertos.c ****   * Description        : Code for freertos applications
   6:Src/freertos.c ****   ******************************************************************************
   7:Src/freertos.c ****   * This notice applies to any and all portions of this file
   8:Src/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/freertos.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/freertos.c ****   * inserted by the user or by software development tools
  11:Src/freertos.c ****   * are owned by their respective copyright owners.
  12:Src/freertos.c ****   *
  13:Src/freertos.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/freertos.c ****   * All rights reserved.
  15:Src/freertos.c ****   *
  16:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/freertos.c ****   *
  19:Src/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/freertos.c ****   *    this list of conditions and the following disclaimer.
  21:Src/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/freertos.c ****   *    and/or other materials provided with the distribution.
  24:Src/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/freertos.c ****   *    derived from this software without specific written permission.
  27:Src/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/freertos.c ****   *    this license is void and will automatically terminate your rights under 
  32:Src/freertos.c ****   *    this license. 
  33:Src/freertos.c ****   *
ARM GAS  /tmp/cccy6xvc.s 			page 2


  34:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/freertos.c ****   *
  47:Src/freertos.c ****   ******************************************************************************
  48:Src/freertos.c ****   */
  49:Src/freertos.c **** /* USER CODE END Header */
  50:Src/freertos.c **** 
  51:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  52:Src/freertos.c **** #include "FreeRTOS.h"
  53:Src/freertos.c **** #include "task.h"
  54:Src/freertos.c **** #include "main.h"
  55:Src/freertos.c **** #include "cmsis_os.h"
  56:Src/freertos.c **** #include "stm32f1xx_hal.h"
  57:Src/freertos.c **** 
  58:Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  59:Src/freertos.c **** /* USER CODE BEGIN Includes */     
  60:Src/freertos.c **** 
  61:Src/freertos.c **** /* USER CODE END Includes */
  62:Src/freertos.c **** 
  63:Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  64:Src/freertos.c **** /* USER CODE BEGIN PTD */
  65:Src/freertos.c **** 
  66:Src/freertos.c **** /* USER CODE END PTD */
  67:Src/freertos.c **** 
  68:Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  69:Src/freertos.c **** /* USER CODE BEGIN PD */
  70:Src/freertos.c **** 
  71:Src/freertos.c **** /* USER CODE END PD */
  72:Src/freertos.c **** 
  73:Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  74:Src/freertos.c **** /* USER CODE BEGIN PM */
  75:Src/freertos.c **** extern UART_HandleTypeDef huart1;
  76:Src/freertos.c **** /* USER CODE END PM */
  77:Src/freertos.c **** 
  78:Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  79:Src/freertos.c **** /* USER CODE BEGIN Variables */
  80:Src/freertos.c **** 
  81:Src/freertos.c **** /* USER CODE END Variables */
  82:Src/freertos.c **** osThreadId Task01Handle;
  83:Src/freertos.c **** osThreadId Task02Handle;
  84:Src/freertos.c **** 
  85:Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  86:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  87:Src/freertos.c ****    
  88:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  89:Src/freertos.c **** 
  90:Src/freertos.c **** void StartTask01(void const * argument);
ARM GAS  /tmp/cccy6xvc.s 			page 3


  91:Src/freertos.c **** void StartTask02(void const * argument);
  92:Src/freertos.c **** 
  93:Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  94:Src/freertos.c **** 
  95:Src/freertos.c **** /**
  96:Src/freertos.c ****   * @brief  FreeRTOS initialization
  97:Src/freertos.c ****   * @param  None
  98:Src/freertos.c ****   * @retval None
  99:Src/freertos.c ****   */
 100:Src/freertos.c **** void MX_FREERTOS_Init(void) {
 101:Src/freertos.c ****   /* USER CODE BEGIN Init */
 102:Src/freertos.c ****        
 103:Src/freertos.c ****   /* USER CODE END Init */
 104:Src/freertos.c **** 
 105:Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 106:Src/freertos.c ****   /* add mutexes, ... */
 107:Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 108:Src/freertos.c **** 
 109:Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 110:Src/freertos.c ****   /* add semaphores, ... */
 111:Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 112:Src/freertos.c **** 
 113:Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 114:Src/freertos.c ****   /* start timers, add new ones, ... */
 115:Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 116:Src/freertos.c **** 
 117:Src/freertos.c ****   /* Create the thread(s) */
 118:Src/freertos.c ****   /* definition and creation of Task01 */
 119:Src/freertos.c ****   osThreadDef(Task01, StartTask01, osPriorityNormal, 0, 128);
 120:Src/freertos.c ****   Task01Handle = osThreadCreate(osThread(Task01), NULL);
 121:Src/freertos.c **** 
 122:Src/freertos.c ****   /* definition and creation of Task02 */
 123:Src/freertos.c ****   osThreadDef(Task02, StartTask02, osPriorityNormal, 0, 256);
 124:Src/freertos.c ****   Task02Handle = osThreadCreate(osThread(Task02), NULL);
 125:Src/freertos.c **** 
 126:Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 127:Src/freertos.c ****   /* add threads, ... */
 128:Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 129:Src/freertos.c **** 
 130:Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 131:Src/freertos.c ****   /* add queues, ... */
 132:Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 133:Src/freertos.c **** }
 134:Src/freertos.c **** 
 135:Src/freertos.c **** /* USER CODE BEGIN Header_StartTask01 */
 136:Src/freertos.c **** /**
 137:Src/freertos.c ****   * @brief  Function implementing the Task01 thread.
 138:Src/freertos.c ****   * @param  argument: Not used 
 139:Src/freertos.c ****   * @retval None
 140:Src/freertos.c ****   */
 141:Src/freertos.c **** /* USER CODE END Header_StartTask01 */
 142:Src/freertos.c **** void StartTask01(void const * argument)
 143:Src/freertos.c **** {
  26              		.loc 1 143 0
  27              		.cfi_startproc
  28              		@ Volatile: function does not return.
  29              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cccy6xvc.s 			page 4


  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              	.LVL1:
  38              	.L2:
  39              	.LBB2:
 144:Src/freertos.c **** 
 145:Src/freertos.c ****   /* USER CODE BEGIN StartTask01 */
 146:Src/freertos.c ****   /* Infinite loop */
 147:Src/freertos.c ****   while(1)
 148:Src/freertos.c ****   {
 149:Src/freertos.c ****     //HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_12);
 150:Src/freertos.c ****    // HAL_UART_Transmit(&huart1,"go",2,0xffff);
 151:Src/freertos.c ****     showRcpwmonUart();
  40              		.loc 1 151 0 discriminator 1
  41 0002 FFF7FEFF 		bl	showRcpwmonUart
  42              	.LVL2:
 152:Src/freertos.c ****     osDelay(100);
  43              		.loc 1 152 0 discriminator 1
  44 0006 6420     		movs	r0, #100
  45 0008 FFF7FEFF 		bl	osDelay
  46              	.LVL3:
  47 000c F9E7     		b	.L2
  48              	.LBE2:
  49              		.cfi_endproc
  50              	.LFE70:
  52              		.section	.text.StartTask02,"ax",%progbits
  53              		.align	1
  54              		.global	StartTask02
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  58              		.fpu softvfp
  60              	StartTask02:
  61              	.LFB71:
 153:Src/freertos.c ****   }
 154:Src/freertos.c ****   /* USER CODE END StartTask01 */
 155:Src/freertos.c **** }
 156:Src/freertos.c **** 
 157:Src/freertos.c **** /* USER CODE BEGIN Header_StartTask02 */
 158:Src/freertos.c **** /**
 159:Src/freertos.c **** * @brief Function implementing the Task02 thread.
 160:Src/freertos.c **** * @param argument: Not used
 161:Src/freertos.c **** * @retval None
 162:Src/freertos.c **** */
 163:Src/freertos.c **** /* USER CODE END Header_StartTask02 */
 164:Src/freertos.c **** void StartTask02(void const * argument)
 165:Src/freertos.c **** {
  62              		.loc 1 165 0
  63              		.cfi_startproc
  64              		@ Volatile: function does not return.
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cccy6xvc.s 			page 5


  67              	.LVL4:
  68 0000 08B5     		push	{r3, lr}
  69              	.LCFI1:
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 3, -8
  72              		.cfi_offset 14, -4
  73              	.LVL5:
  74              	.L5:
  75              	.LBB3:
 166:Src/freertos.c ****   while(1)
 167:Src/freertos.c ****   {
 168:Src/freertos.c ****     sendCanard();
  76              		.loc 1 168 0 discriminator 1
  77 0002 FFF7FEFF 		bl	sendCanard
  78              	.LVL6:
 169:Src/freertos.c ****     receiveCanard();
  79              		.loc 1 169 0 discriminator 1
  80 0006 FFF7FEFF 		bl	receiveCanard
  81              	.LVL7:
 170:Src/freertos.c ****     spinCanard();
  82              		.loc 1 170 0 discriminator 1
  83 000a FFF7FEFF 		bl	spinCanard
  84              	.LVL8:
 171:Src/freertos.c ****     publishCanard();
  85              		.loc 1 171 0 discriminator 1
  86 000e FFF7FEFF 		bl	publishCanard
  87              	.LVL9:
  88 0012 F6E7     		b	.L5
  89              	.LBE3:
  90              		.cfi_endproc
  91              	.LFE71:
  93              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  94              		.align	1
  95              		.global	MX_FREERTOS_Init
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu softvfp
 101              	MX_FREERTOS_Init:
 102              	.LFB69:
 100:Src/freertos.c ****   /* USER CODE BEGIN Init */
 103              		.loc 1 100 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 40
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 70B5     		push	{r4, r5, r6, lr}
 108              	.LCFI2:
 109              		.cfi_def_cfa_offset 16
 110              		.cfi_offset 4, -16
 111              		.cfi_offset 5, -12
 112              		.cfi_offset 6, -8
 113              		.cfi_offset 14, -4
 114 0002 8AB0     		sub	sp, sp, #40
 115              	.LCFI3:
 116              		.cfi_def_cfa_offset 56
 119:Src/freertos.c ****   Task01Handle = osThreadCreate(osThread(Task01), NULL);
 117              		.loc 1 119 0
ARM GAS  /tmp/cccy6xvc.s 			page 6


 118 0004 0D4C     		ldr	r4, .L9
 119 0006 05AD     		add	r5, sp, #20
 120 0008 2646     		mov	r6, r4
 121 000a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 122 000c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 123 000e 3368     		ldr	r3, [r6]
 124 0010 2B60     		str	r3, [r5]
 120:Src/freertos.c **** 
 125              		.loc 1 120 0
 126 0012 0021     		movs	r1, #0
 127 0014 05A8     		add	r0, sp, #20
 128 0016 FFF7FEFF 		bl	osThreadCreate
 129              	.LVL10:
 130 001a 094B     		ldr	r3, .L9+4
 131 001c 1860     		str	r0, [r3]
 123:Src/freertos.c ****   Task02Handle = osThreadCreate(osThread(Task02), NULL);
 132              		.loc 1 123 0
 133 001e 6D46     		mov	r5, sp
 134 0020 1434     		adds	r4, r4, #20
 135 0022 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 136 0024 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 137 0026 2368     		ldr	r3, [r4]
 138 0028 2B60     		str	r3, [r5]
 124:Src/freertos.c **** 
 139              		.loc 1 124 0
 140 002a 0021     		movs	r1, #0
 141 002c 6846     		mov	r0, sp
 142 002e FFF7FEFF 		bl	osThreadCreate
 143              	.LVL11:
 144 0032 044B     		ldr	r3, .L9+8
 145 0034 1860     		str	r0, [r3]
 133:Src/freertos.c **** 
 146              		.loc 1 133 0
 147 0036 0AB0     		add	sp, sp, #40
 148              	.LCFI4:
 149              		.cfi_def_cfa_offset 16
 150              		@ sp needed
 151 0038 70BD     		pop	{r4, r5, r6, pc}
 152              	.L10:
 153 003a 00BF     		.align	2
 154              	.L9:
 155 003c 00000000 		.word	.LANCHOR0
 156 0040 00000000 		.word	Task01Handle
 157 0044 00000000 		.word	Task02Handle
 158              		.cfi_endproc
 159              	.LFE69:
 161              		.comm	Task02Handle,4,4
 162              		.comm	Task01Handle,4,4
 163              		.section	.rodata
 164              		.align	2
 165              		.set	.LANCHOR0,. + 0
 166              	.LC4:
 167 0000 08000000 		.word	.LC0
 168 0004 00000000 		.word	StartTask01
 169 0008 0000     		.short	0
 170 000a 0000     		.space	2
 171 000c 00000000 		.word	0
ARM GAS  /tmp/cccy6xvc.s 			page 7


 172 0010 80000000 		.word	128
 173              	.LC5:
 174 0014 00000000 		.word	.LC2
 175 0018 00000000 		.word	StartTask02
 176 001c 0000     		.short	0
 177 001e 0000     		.space	2
 178 0020 00000000 		.word	0
 179 0024 00010000 		.word	256
 180              		.section	.rodata.str1.4,"aMS",%progbits,1
 181              		.align	2
 182              	.LC2:
 183 0000 5461736B 		.ascii	"Task02\000"
 183      303200
 184 0007 00       		.space	1
 185              	.LC0:
 186 0008 5461736B 		.ascii	"Task01\000"
 186      303100
 187              		.text
 188              	.Letext0:
 189              		.file 2 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_default_types.
 190              		.file 3 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h"
 191              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 192              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 193              		.file 6 "Inc/FreeRTOSConfig.h"
 194              		.file 7 "Drivers/CMSIS/Include/core_cm3.h"
 195              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 196              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 197              		.file 10 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/lock.h"
 198              		.file 11 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_types.h"
 199              		.file 12 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h
 200              		.file 13 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/reent.h"
 201              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 202              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 203              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
ARM GAS  /tmp/cccy6xvc.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/cccy6xvc.s:16     .text.StartTask01:0000000000000000 $t
     /tmp/cccy6xvc.s:23     .text.StartTask01:0000000000000000 StartTask01
     /tmp/cccy6xvc.s:53     .text.StartTask02:0000000000000000 $t
     /tmp/cccy6xvc.s:60     .text.StartTask02:0000000000000000 StartTask02
     /tmp/cccy6xvc.s:94     .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/cccy6xvc.s:101    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/cccy6xvc.s:155    .text.MX_FREERTOS_Init:000000000000003c $d
                            *COM*:0000000000000004 Task01Handle
                            *COM*:0000000000000004 Task02Handle
     /tmp/cccy6xvc.s:164    .rodata:0000000000000000 $d
     /tmp/cccy6xvc.s:181    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
showRcpwmonUart
osDelay
sendCanard
receiveCanard
spinCanard
publishCanard
osThreadCreate
