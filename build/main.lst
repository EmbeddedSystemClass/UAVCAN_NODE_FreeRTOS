ARM GAS  /tmp/ccHVCGK8.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_TIM_PeriodElapsedCallback
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_TIM_PeriodElapsedCallback:
  24              	.LFB72:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  32:Src/main.c    ****   *    this license. 
  33:Src/main.c    ****   *
ARM GAS  /tmp/ccHVCGK8.s 			page 2


  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  50:Src/main.c    **** #include "main.h"
  51:Src/main.c    **** #include "stm32f1xx_hal.h"
  52:Src/main.c    **** #include "cmsis_os.h"
  53:Src/main.c    **** #include "can.h"
  54:Src/main.c    **** #include "usart.h"
  55:Src/main.c    **** #include "gpio.h"
  56:Src/main.c    **** #include "uavcan.h"
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN Includes */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END Includes */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN PV */
  65:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END PV */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  70:Src/main.c    **** void SystemClock_Config(void);
  71:Src/main.c    **** void MX_FREERTOS_Init(void);
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE BEGIN PFP */
  74:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END PFP */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE BEGIN 0 */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END 0 */
  81:Src/main.c    **** 
  82:Src/main.c    **** /**
  83:Src/main.c    ****   * @brief  The application entry point.
  84:Src/main.c    ****   *
  85:Src/main.c    ****   * @retval None
  86:Src/main.c    ****   */
  87:Src/main.c    **** int main(void)
  88:Src/main.c    **** {
  89:Src/main.c    ****   /* USER CODE BEGIN 1 */
  90:Src/main.c    **** 
ARM GAS  /tmp/ccHVCGK8.s 			page 3


  91:Src/main.c    ****   /* USER CODE END 1 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  96:Src/main.c    ****   HAL_Init();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN Init */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END Init */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Configure the system clock */
 103:Src/main.c    ****   SystemClock_Config();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END SysInit */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Initialize all configured peripherals */
 110:Src/main.c    ****   MX_GPIO_Init();
 111:Src/main.c    ****   MX_USART1_UART_Init();
 112:Src/main.c    ****   MX_CAN_Init();
 113:Src/main.c    ****   /* USER CODE BEGIN 2 */
 114:Src/main.c    ****   uavcanInit();
 115:Src/main.c    ****   /* USER CODE END 2 */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Call init function for freertos objects (in freertos.c) */
 118:Src/main.c    ****   MX_FREERTOS_Init();
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Start scheduler */
 121:Src/main.c    ****   osKernelStart();
 122:Src/main.c    ****   
 123:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* Infinite loop */
 126:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 127:Src/main.c    ****   while (1)
 128:Src/main.c    ****   {
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* USER CODE END WHILE */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* USER CODE BEGIN 3 */
 133:Src/main.c    **** 
 134:Src/main.c    ****   }
 135:Src/main.c    ****   /* USER CODE END 3 */
 136:Src/main.c    **** 
 137:Src/main.c    **** }
 138:Src/main.c    **** 
 139:Src/main.c    **** /**
 140:Src/main.c    ****   * @brief System Clock Configuration
 141:Src/main.c    ****   * @retval None
 142:Src/main.c    ****   */
 143:Src/main.c    **** void SystemClock_Config(void)
 144:Src/main.c    **** {
 145:Src/main.c    **** 
 146:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 147:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
ARM GAS  /tmp/ccHVCGK8.s 			page 4


 148:Src/main.c    **** 
 149:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 150:Src/main.c    ****     */
 151:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 152:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 153:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 154:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 158:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159:Src/main.c    ****   {
 160:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 161:Src/main.c    ****   }
 162:Src/main.c    **** 
 163:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 164:Src/main.c    ****     */
 165:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 166:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 167:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 168:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 169:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 170:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 171:Src/main.c    **** 
 172:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 173:Src/main.c    ****   {
 174:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 175:Src/main.c    ****   }
 176:Src/main.c    **** 
 177:Src/main.c    ****     /**Configure the Systick interrupt time 
 178:Src/main.c    ****     */
 179:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 180:Src/main.c    **** 
 181:Src/main.c    ****     /**Configure the Systick 
 182:Src/main.c    ****     */
 183:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 184:Src/main.c    **** 
 185:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 186:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 187:Src/main.c    **** }
 188:Src/main.c    **** 
 189:Src/main.c    **** /* USER CODE BEGIN 4 */
 190:Src/main.c    **** 
 191:Src/main.c    **** /* USER CODE END 4 */
 192:Src/main.c    **** 
 193:Src/main.c    **** /**
 194:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 195:Src/main.c    ****   * @note   This function is called  when TIM4 interrupt took place, inside
 196:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 197:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 198:Src/main.c    ****   * @param  htim : TIM handle
 199:Src/main.c    ****   * @retval None
 200:Src/main.c    ****   */
 201:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 202:Src/main.c    **** {
  26              		.loc 1 202 0
  27              		.cfi_startproc
ARM GAS  /tmp/ccHVCGK8.s 			page 5


  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 203:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 204:Src/main.c    **** 
 205:Src/main.c    ****   /* USER CODE END Callback 0 */
 206:Src/main.c    ****   if (htim->Instance == TIM4) {
  36              		.loc 1 206 0
  37 0002 0268     		ldr	r2, [r0]
  38 0004 034B     		ldr	r3, .L5
  39 0006 9A42     		cmp	r2, r3
  40 0008 00D0     		beq	.L4
  41              	.LVL1:
  42              	.L1:
  43 000a 08BD     		pop	{r3, pc}
  44              	.LVL2:
  45              	.L4:
 207:Src/main.c    ****     HAL_IncTick();
  46              		.loc 1 207 0
  47 000c FFF7FEFF 		bl	HAL_IncTick
  48              	.LVL3:
 208:Src/main.c    ****   }
 209:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 210:Src/main.c    **** 
 211:Src/main.c    ****   /* USER CODE END Callback 1 */
 212:Src/main.c    **** }
  49              		.loc 1 212 0
  50 0010 FBE7     		b	.L1
  51              	.L6:
  52 0012 00BF     		.align	2
  53              	.L5:
  54 0014 00080040 		.word	1073743872
  55              		.cfi_endproc
  56              	.LFE72:
  58              		.section	.text._Error_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	_Error_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu softvfp
  66              	_Error_Handler:
  67              	.LFB73:
 213:Src/main.c    **** 
 214:Src/main.c    **** /**
 215:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 216:Src/main.c    ****   * @param  file: The file name as string.
 217:Src/main.c    ****   * @param  line: The line in file as a number.
 218:Src/main.c    ****   * @retval None
 219:Src/main.c    ****   */
 220:Src/main.c    **** void _Error_Handler(char *file, int line)
 221:Src/main.c    **** {
ARM GAS  /tmp/ccHVCGK8.s 			page 6


  68              		.loc 1 221 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.LVL4:
  75              	.L8:
  76 0000 FEE7     		b	.L8
  77              		.cfi_endproc
  78              	.LFE73:
  80              		.section	.text.SystemClock_Config,"ax",%progbits
  81              		.align	1
  82              		.global	SystemClock_Config
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu softvfp
  88              	SystemClock_Config:
  89              	.LFB71:
 144:Src/main.c    **** 
  90              		.loc 1 144 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 64
  93              		@ frame_needed = 0, uses_anonymous_args = 0
 144:Src/main.c    **** 
  94              		.loc 1 144 0
  95 0000 00B5     		push	{lr}
  96              	.LCFI1:
  97              		.cfi_def_cfa_offset 4
  98              		.cfi_offset 14, -4
  99 0002 91B0     		sub	sp, sp, #68
 100              	.LCFI2:
 101              		.cfi_def_cfa_offset 72
 151:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 102              		.loc 1 151 0
 103 0004 0122     		movs	r2, #1
 104 0006 0692     		str	r2, [sp, #24]
 152:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 105              		.loc 1 152 0
 106 0008 4FF48033 		mov	r3, #65536
 107 000c 0793     		str	r3, [sp, #28]
 153:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 108              		.loc 1 153 0
 109 000e 0021     		movs	r1, #0
 110 0010 0891     		str	r1, [sp, #32]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 111              		.loc 1 154 0
 112 0012 0A92     		str	r2, [sp, #40]
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 113              		.loc 1 155 0
 114 0014 0222     		movs	r2, #2
 115 0016 0D92     		str	r2, [sp, #52]
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 116              		.loc 1 156 0
 117 0018 0E93     		str	r3, [sp, #56]
 157:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccHVCGK8.s 			page 7


 118              		.loc 1 157 0
 119 001a 4FF4E013 		mov	r3, #1835008
 120 001e 0F93     		str	r3, [sp, #60]
 158:Src/main.c    ****   {
 121              		.loc 1 158 0
 122 0020 06A8     		add	r0, sp, #24
 123 0022 FFF7FEFF 		bl	HAL_RCC_OscConfig
 124              	.LVL5:
 125 0026 08BB     		cbnz	r0, .L13
 165:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 126              		.loc 1 165 0
 127 0028 0F23     		movs	r3, #15
 128 002a 0193     		str	r3, [sp, #4]
 167:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 129              		.loc 1 167 0
 130 002c 0221     		movs	r1, #2
 131 002e 0291     		str	r1, [sp, #8]
 168:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 132              		.loc 1 168 0
 133 0030 0023     		movs	r3, #0
 134 0032 0393     		str	r3, [sp, #12]
 169:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 135              		.loc 1 169 0
 136 0034 4FF48062 		mov	r2, #1024
 137 0038 0492     		str	r2, [sp, #16]
 170:Src/main.c    **** 
 138              		.loc 1 170 0
 139 003a 0593     		str	r3, [sp, #20]
 172:Src/main.c    ****   {
 140              		.loc 1 172 0
 141 003c 01A8     		add	r0, sp, #4
 142 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 143              	.LVL6:
 144 0042 B8B9     		cbnz	r0, .L14
 179:Src/main.c    **** 
 145              		.loc 1 179 0
 146 0044 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 147              	.LVL7:
 148 0048 0C4B     		ldr	r3, .L15
 149 004a A3FB0030 		umull	r3, r0, r3, r0
 150 004e 8009     		lsrs	r0, r0, #6
 151 0050 FFF7FEFF 		bl	HAL_SYSTICK_Config
 152              	.LVL8:
 183:Src/main.c    **** 
 153              		.loc 1 183 0
 154 0054 0420     		movs	r0, #4
 155 0056 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 156              	.LVL9:
 186:Src/main.c    **** }
 157              		.loc 1 186 0
 158 005a 0022     		movs	r2, #0
 159 005c 0F21     		movs	r1, #15
 160 005e 4FF0FF30 		mov	r0, #-1
 161 0062 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 162              	.LVL10:
 187:Src/main.c    **** 
 163              		.loc 1 187 0
ARM GAS  /tmp/ccHVCGK8.s 			page 8


 164 0066 11B0     		add	sp, sp, #68
 165              	.LCFI3:
 166              		.cfi_remember_state
 167              		.cfi_def_cfa_offset 4
 168              		@ sp needed
 169 0068 5DF804FB 		ldr	pc, [sp], #4
 170              	.L13:
 171              	.LCFI4:
 172              		.cfi_restore_state
 160:Src/main.c    ****   }
 173              		.loc 1 160 0
 174 006c A021     		movs	r1, #160
 175 006e 0448     		ldr	r0, .L15+4
 176 0070 FFF7FEFF 		bl	_Error_Handler
 177              	.LVL11:
 178              	.L14:
 174:Src/main.c    ****   }
 179              		.loc 1 174 0
 180 0074 AE21     		movs	r1, #174
 181 0076 0248     		ldr	r0, .L15+4
 182 0078 FFF7FEFF 		bl	_Error_Handler
 183              	.LVL12:
 184              	.L16:
 185              		.align	2
 186              	.L15:
 187 007c D34D6210 		.word	274877907
 188 0080 00000000 		.word	.LC0
 189              		.cfi_endproc
 190              	.LFE71:
 192              		.section	.text.main,"ax",%progbits
 193              		.align	1
 194              		.global	main
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu softvfp
 200              	main:
 201              	.LFB70:
  88:Src/main.c    ****   /* USER CODE BEGIN 1 */
 202              		.loc 1 88 0
 203              		.cfi_startproc
 204              		@ Volatile: function does not return.
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207 0000 08B5     		push	{r3, lr}
 208              	.LCFI5:
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 3, -8
 211              		.cfi_offset 14, -4
  96:Src/main.c    **** 
 212              		.loc 1 96 0
 213 0002 FFF7FEFF 		bl	HAL_Init
 214              	.LVL13:
 103:Src/main.c    **** 
 215              		.loc 1 103 0
 216 0006 FFF7FEFF 		bl	SystemClock_Config
 217              	.LVL14:
ARM GAS  /tmp/ccHVCGK8.s 			page 9


 110:Src/main.c    ****   MX_USART1_UART_Init();
 218              		.loc 1 110 0
 219 000a FFF7FEFF 		bl	MX_GPIO_Init
 220              	.LVL15:
 111:Src/main.c    ****   MX_CAN_Init();
 221              		.loc 1 111 0
 222 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 223              	.LVL16:
 112:Src/main.c    ****   /* USER CODE BEGIN 2 */
 224              		.loc 1 112 0
 225 0012 FFF7FEFF 		bl	MX_CAN_Init
 226              	.LVL17:
 114:Src/main.c    ****   /* USER CODE END 2 */
 227              		.loc 1 114 0
 228 0016 FFF7FEFF 		bl	uavcanInit
 229              	.LVL18:
 118:Src/main.c    **** 
 230              		.loc 1 118 0
 231 001a FFF7FEFF 		bl	MX_FREERTOS_Init
 232              	.LVL19:
 121:Src/main.c    ****   
 233              		.loc 1 121 0
 234 001e FFF7FEFF 		bl	osKernelStart
 235              	.LVL20:
 236              	.L18:
 237 0022 FEE7     		b	.L18
 238              		.cfi_endproc
 239              	.LFE70:
 241              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 242              		.align	2
 243              	.LC0:
 244 0000 5372632F 		.ascii	"Src/main.c\000"
 244      6D61696E 
 244      2E6300
 245              		.text
 246              	.Letext0:
 247              		.file 2 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_default_types.
 248              		.file 3 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h"
 249              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 250              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 251              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 252              		.file 7 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/lock.h"
 253              		.file 8 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_types.h"
 254              		.file 9 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 255              		.file 10 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/reent.h"
 256              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 257              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 258              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 259              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 260              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 261              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 262              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 263              		.file 18 "Inc/can.h"
 264              		.file 19 "Inc/usart.h"
 265              		.file 20 "Inc/uavcan.h"
 266              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 267              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccHVCGK8.s 			page 10


 268              		.file 23 "Inc/gpio.h"
 269              		.file 24 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  /tmp/ccHVCGK8.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccHVCGK8.s:16     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccHVCGK8.s:23     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccHVCGK8.s:54     .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccHVCGK8.s:59     .text._Error_Handler:0000000000000000 $t
     /tmp/ccHVCGK8.s:66     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccHVCGK8.s:81     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccHVCGK8.s:88     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccHVCGK8.s:187    .text.SystemClock_Config:000000000000007c $d
     /tmp/ccHVCGK8.s:193    .text.main:0000000000000000 $t
     /tmp/ccHVCGK8.s:200    .text.main:0000000000000000 main
     /tmp/ccHVCGK8.s:242    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
MX_CAN_Init
uavcanInit
MX_FREERTOS_Init
osKernelStart
