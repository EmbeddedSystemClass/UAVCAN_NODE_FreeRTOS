ARM GAS  /tmp/cchUZGye.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART1_UART_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_USART1_UART_Init:
  24              	.LFB64:
  25              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   * This notice applies to any and all portions of this file
   8:Src/usart.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usart.c   ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usart.c   ****   * inserted by the user or by software development tools
  11:Src/usart.c   ****   * are owned by their respective copyright owners.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/usart.c   ****   * All rights reserved.
  15:Src/usart.c   ****   *
  16:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usart.c   ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usart.c   ****   *
  19:Src/usart.c   ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usart.c   ****   *    this list of conditions and the following disclaimer.
  21:Src/usart.c   ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usart.c   ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usart.c   ****   *    and/or other materials provided with the distribution.
  24:Src/usart.c   ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usart.c   ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usart.c   ****   *    derived from this software without specific written permission.
  27:Src/usart.c   ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usart.c   ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usart.c   ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/usart.c   ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usart.c   ****   *    this license is void and will automatically terminate your rights under 
  32:Src/usart.c   ****   *    this license. 
  33:Src/usart.c   ****   *
ARM GAS  /tmp/cchUZGye.s 			page 2


  34:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usart.c   ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usart.c   ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usart.c   ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usart.c   ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usart.c   ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usart.c   ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usart.c   ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usart.c   ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usart.c   ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usart.c   ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usart.c   ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usart.c   ****   *
  47:Src/usart.c   ****   ******************************************************************************
  48:Src/usart.c   ****   */
  49:Src/usart.c   **** 
  50:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  51:Src/usart.c   **** #include "usart.h"
  52:Src/usart.c   **** 
  53:Src/usart.c   **** #include "gpio.h"
  54:Src/usart.c   **** 
  55:Src/usart.c   **** /* USER CODE BEGIN 0 */
  56:Src/usart.c   **** 
  57:Src/usart.c   **** /* USER CODE END 0 */
  58:Src/usart.c   **** 
  59:Src/usart.c   **** UART_HandleTypeDef huart1;
  60:Src/usart.c   **** 
  61:Src/usart.c   **** /* USART1 init function */
  62:Src/usart.c   **** 
  63:Src/usart.c   **** void MX_USART1_UART_Init(void)
  64:Src/usart.c   **** {
  26              		.loc 1 64 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  65:Src/usart.c   **** 
  66:Src/usart.c   ****   huart1.Instance = USART1;
  35              		.loc 1 66 0
  36 0002 0B48     		ldr	r0, .L5
  37 0004 0B4B     		ldr	r3, .L5+4
  38 0006 0360     		str	r3, [r0]
  67:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  39              		.loc 1 67 0
  40 0008 4FF4E133 		mov	r3, #115200
  41 000c 4360     		str	r3, [r0, #4]
  68:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  42              		.loc 1 68 0
  43 000e 0023     		movs	r3, #0
  44 0010 8360     		str	r3, [r0, #8]
  69:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  45              		.loc 1 69 0
  46 0012 C360     		str	r3, [r0, #12]
ARM GAS  /tmp/cchUZGye.s 			page 3


  70:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
  47              		.loc 1 70 0
  48 0014 0361     		str	r3, [r0, #16]
  71:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  49              		.loc 1 71 0
  50 0016 0C22     		movs	r2, #12
  51 0018 4261     		str	r2, [r0, #20]
  72:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  52              		.loc 1 72 0
  53 001a 8361     		str	r3, [r0, #24]
  73:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  54              		.loc 1 73 0
  55 001c C361     		str	r3, [r0, #28]
  74:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  56              		.loc 1 74 0
  57 001e FFF7FEFF 		bl	HAL_UART_Init
  58              	.LVL0:
  59 0022 00B9     		cbnz	r0, .L4
  60              	.L1:
  61 0024 08BD     		pop	{r3, pc}
  62              	.L4:
  75:Src/usart.c   ****   {
  76:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
  63              		.loc 1 76 0
  64 0026 4C21     		movs	r1, #76
  65 0028 0348     		ldr	r0, .L5+8
  66 002a FFF7FEFF 		bl	_Error_Handler
  67              	.LVL1:
  77:Src/usart.c   ****   }
  78:Src/usart.c   **** 
  79:Src/usart.c   **** }
  68              		.loc 1 79 0
  69 002e F9E7     		b	.L1
  70              	.L6:
  71              		.align	2
  72              	.L5:
  73 0030 00000000 		.word	huart1
  74 0034 00380140 		.word	1073821696
  75 0038 00000000 		.word	.LC0
  76              		.cfi_endproc
  77              	.LFE64:
  79              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  80              		.align	1
  81              		.global	HAL_UART_MspInit
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu softvfp
  87              	HAL_UART_MspInit:
  88              	.LFB65:
  80:Src/usart.c   **** 
  81:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  82:Src/usart.c   **** {
  89              		.loc 1 82 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 24
  92              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cchUZGye.s 			page 4


  93              	.LVL2:
  83:Src/usart.c   **** 
  84:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
  85:Src/usart.c   ****   if(uartHandle->Instance==USART1)
  94              		.loc 1 85 0
  95 0000 0268     		ldr	r2, [r0]
  96 0002 184B     		ldr	r3, .L14
  97 0004 9A42     		cmp	r2, r3
  98 0006 00D0     		beq	.L13
  99 0008 7047     		bx	lr
 100              	.L13:
  82:Src/usart.c   **** 
 101              		.loc 1 82 0
 102 000a 30B5     		push	{r4, r5, lr}
 103              	.LCFI1:
 104              		.cfi_def_cfa_offset 12
 105              		.cfi_offset 4, -12
 106              		.cfi_offset 5, -8
 107              		.cfi_offset 14, -4
 108 000c 87B0     		sub	sp, sp, #28
 109              	.LCFI2:
 110              		.cfi_def_cfa_offset 40
 111              	.LBB2:
  86:Src/usart.c   ****   {
  87:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
  88:Src/usart.c   **** 
  89:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
  90:Src/usart.c   ****     /* USART1 clock enable */
  91:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
 112              		.loc 1 91 0
 113 000e 03F55843 		add	r3, r3, #55296
 114 0012 9A69     		ldr	r2, [r3, #24]
 115 0014 42F48042 		orr	r2, r2, #16384
 116 0018 9A61     		str	r2, [r3, #24]
 117 001a 9B69     		ldr	r3, [r3, #24]
 118 001c 03F48043 		and	r3, r3, #16384
 119 0020 0193     		str	r3, [sp, #4]
 120 0022 019B     		ldr	r3, [sp, #4]
 121              	.LBE2:
  92:Src/usart.c   ****   
  93:Src/usart.c   ****     /**USART1 GPIO Configuration    
  94:Src/usart.c   ****     PA9     ------> USART1_TX
  95:Src/usart.c   ****     PA10     ------> USART1_RX 
  96:Src/usart.c   ****     */
  97:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 122              		.loc 1 97 0
 123 0024 4FF40073 		mov	r3, #512
 124 0028 0293     		str	r3, [sp, #8]
  98:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 125              		.loc 1 98 0
 126 002a 0223     		movs	r3, #2
 127 002c 0393     		str	r3, [sp, #12]
  99:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 128              		.loc 1 99 0
 129 002e 0323     		movs	r3, #3
 130 0030 0593     		str	r3, [sp, #20]
 100:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
ARM GAS  /tmp/cchUZGye.s 			page 5


 131              		.loc 1 100 0
 132 0032 0D4D     		ldr	r5, .L14+4
 133 0034 02A9     		add	r1, sp, #8
 134 0036 2846     		mov	r0, r5
 135              	.LVL3:
 136 0038 FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL4:
 101:Src/usart.c   **** 
 102:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
 138              		.loc 1 102 0
 139 003c 4FF48063 		mov	r3, #1024
 140 0040 0293     		str	r3, [sp, #8]
 103:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 141              		.loc 1 103 0
 142 0042 0024     		movs	r4, #0
 143 0044 0394     		str	r4, [sp, #12]
 104:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 144              		.loc 1 104 0
 145 0046 0494     		str	r4, [sp, #16]
 105:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 146              		.loc 1 105 0
 147 0048 02A9     		add	r1, sp, #8
 148 004a 2846     		mov	r0, r5
 149 004c FFF7FEFF 		bl	HAL_GPIO_Init
 150              	.LVL5:
 106:Src/usart.c   **** 
 107:Src/usart.c   ****     /* USART1 interrupt Init */
 108:Src/usart.c   ****     HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 151              		.loc 1 108 0
 152 0050 2246     		mov	r2, r4
 153 0052 0521     		movs	r1, #5
 154 0054 2520     		movs	r0, #37
 155 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 156              	.LVL6:
 109:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 157              		.loc 1 109 0
 158 005a 2520     		movs	r0, #37
 159 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 160              	.LVL7:
 110:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
 111:Src/usart.c   **** 
 112:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
 113:Src/usart.c   ****   }
 114:Src/usart.c   **** }
 161              		.loc 1 114 0
 162 0060 07B0     		add	sp, sp, #28
 163              	.LCFI3:
 164              		.cfi_def_cfa_offset 12
 165              		@ sp needed
 166 0062 30BD     		pop	{r4, r5, pc}
 167              	.L15:
 168              		.align	2
 169              	.L14:
 170 0064 00380140 		.word	1073821696
 171 0068 00080140 		.word	1073809408
 172              		.cfi_endproc
 173              	.LFE65:
ARM GAS  /tmp/cchUZGye.s 			page 6


 175              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 176              		.align	1
 177              		.global	HAL_UART_MspDeInit
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu softvfp
 183              	HAL_UART_MspDeInit:
 184              	.LFB66:
 115:Src/usart.c   **** 
 116:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 117:Src/usart.c   **** {
 185              		.loc 1 117 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              	.LVL8:
 190 0000 08B5     		push	{r3, lr}
 191              	.LCFI4:
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 3, -8
 194              		.cfi_offset 14, -4
 118:Src/usart.c   **** 
 119:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 195              		.loc 1 119 0
 196 0002 0268     		ldr	r2, [r0]
 197 0004 084B     		ldr	r3, .L20
 198 0006 9A42     		cmp	r2, r3
 199 0008 00D0     		beq	.L19
 200              	.LVL9:
 201              	.L16:
 202 000a 08BD     		pop	{r3, pc}
 203              	.LVL10:
 204              	.L19:
 120:Src/usart.c   ****   {
 121:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 122:Src/usart.c   **** 
 123:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
 124:Src/usart.c   ****     /* Peripheral clock disable */
 125:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
 205              		.loc 1 125 0
 206 000c 074A     		ldr	r2, .L20+4
 207 000e 9369     		ldr	r3, [r2, #24]
 208 0010 23F48043 		bic	r3, r3, #16384
 209 0014 9361     		str	r3, [r2, #24]
 126:Src/usart.c   ****   
 127:Src/usart.c   ****     /**USART1 GPIO Configuration    
 128:Src/usart.c   ****     PA9     ------> USART1_TX
 129:Src/usart.c   ****     PA10     ------> USART1_RX 
 130:Src/usart.c   ****     */
 131:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 210              		.loc 1 131 0
 211 0016 4FF4C061 		mov	r1, #1536
 212 001a 0548     		ldr	r0, .L20+8
 213              	.LVL11:
 214 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 215              	.LVL12:
ARM GAS  /tmp/cchUZGye.s 			page 7


 132:Src/usart.c   **** 
 133:Src/usart.c   ****     /* USART1 interrupt Deinit */
 134:Src/usart.c   ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 216              		.loc 1 134 0
 217 0020 2520     		movs	r0, #37
 218 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 219              	.LVL13:
 135:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 136:Src/usart.c   **** 
 137:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 1 */
 138:Src/usart.c   ****   }
 139:Src/usart.c   **** } 
 220              		.loc 1 139 0
 221 0026 F0E7     		b	.L16
 222              	.L21:
 223              		.align	2
 224              	.L20:
 225 0028 00380140 		.word	1073821696
 226 002c 00100240 		.word	1073876992
 227 0030 00080140 		.word	1073809408
 228              		.cfi_endproc
 229              	.LFE66:
 231              		.comm	huart1,64,4
 232              		.section	.rodata.MX_USART1_UART_Init.str1.4,"aMS",%progbits,1
 233              		.align	2
 234              	.LC0:
 235 0000 5372632F 		.ascii	"Src/usart.c\000"
 235      75736172 
 235      742E6300 
 236              		.text
 237              	.Letext0:
 238              		.file 2 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_default_types.
 239              		.file 3 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h"
 240              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 241              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 242              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 243              		.file 7 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/lock.h"
 244              		.file 8 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_types.h"
 245              		.file 9 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 246              		.file 10 "/usr/bin/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/reent.h"
 247              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 248              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 249              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 250              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 251              		.file 15 "Inc/usart.h"
 252              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/cchUZGye.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/cchUZGye.s:16     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cchUZGye.s:23     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cchUZGye.s:73     .text.MX_USART1_UART_Init:0000000000000030 $d
                            *COM*:0000000000000040 huart1
     /tmp/cchUZGye.s:80     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cchUZGye.s:87     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cchUZGye.s:170    .text.HAL_UART_MspInit:0000000000000064 $d
     /tmp/cchUZGye.s:176    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cchUZGye.s:183    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cchUZGye.s:225    .text.HAL_UART_MspDeInit:0000000000000028 $d
     /tmp/cchUZGye.s:233    .rodata.MX_USART1_UART_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
_Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
